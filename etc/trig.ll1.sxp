(
 (rule _empty "0" (first _eps) (seq))
 (rule trigDoc "1g"
  (start #t)
  (first "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eps "{" )
  (follow _eof)
  (alt _empty _trigDoc_1))
 (rule _trigDoc_1 "1g.1"
  (first "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" "{" )
  (follow _eof)
  (seq statement trigDoc))
 (rule _trigDoc_2 "1g.2"
  (first "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eps "{" )
  (follow _eof)
  (seq trigDoc))
 (terminal GRAPH "1t" (seq (range "Gg") (range "Rr") (range "Aa") (range "Pp") (range "Hh")))
 (rule statement "2g"
  (first "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" "{" )
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (alt directive tripleOrNamedGraph graphword))
 (rule tripleOrNamedGraph "3g"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "[" "{")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (alt _tripleOrNamedGraph_1 _tripleOrNamedGraph_2 _tripleOrNamedGraph_3))
 (rule _tripleOrNamedGraph_5 "3g.5"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq PropertyListNotEmpty "."))
 (rule _tripleOrNamedGraph_2 "3g.2"
  (first "[")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq graphName1 _tripleOrNamedGraph_6))
 (rule _tripleOrNamedGraph_6 "3g.6"
  (first "." IRIREF PNAME_LN PNAME_NS "a" "{")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (alt wrappedGraph _tripleOrNamedGraph_7))
 (rule _tripleOrNamedGraph_7 "3g.7"
  (first "." IRIREF PNAME_LN PNAME_NS "a")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq PropertyList "."))
 (rule _tripleOrNamedGraph_3 "3g.3"
  (first "(" "{")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq _tripleOrNamedGraph_8 PropertyListNotEmpty "."))
 (rule _tripleOrNamedGraph_8 "3g.8"
  (first "(" "{")
  (follow IRIREF PNAME_LN PNAME_NS "a")
  (alt collection graphSubject))
 (rule _tripleOrNamedGraph_4 "3g.4"
  (first IRIREF PNAME_LN PNAME_NS "a" "{")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (alt wrappedGraph _tripleOrNamedGraph_5))
 (rule _tripleOrNamedGraph_9 "3g.9"
  (first IRIREF PNAME_LN PNAME_NS "a" "{")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq _tripleOrNamedGraph_4))
 (rule _tripleOrNamedGraph_10 "3g.10"
  (first ".")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq "."))
 (rule _tripleOrNamedGraph_11 "3g.11"
  (first "." IRIREF PNAME_LN PNAME_NS "a" "{")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq _tripleOrNamedGraph_6))
 (rule _tripleOrNamedGraph_12 "3g.12"
  (first ".")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq "."))
 (rule directive "3"
  (first BASE PREFIX)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (alt prefixID base))
 (rule _tripleOrNamedGraph_1 "3g.1"
  (first ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq graphName _tripleOrNamedGraph_4))
 (rule prefixID "4"
  (first PREFIX)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq PREFIX PNAME_NS IRIREF _prefixID_1))
 (rule _graphword_1 "4g.1"
  (first ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq graphName wrappedGraph))
 (rule graphword "4g"
  (first GRAPH)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq GRAPH graphName wrappedGraph))
 (rule _prefixID_1 "4.1"
  (first "." _eps)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (alt _empty "."))
 (rule _prefixID_2 "4.2"
  (first PNAME_NS)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq PNAME_NS IRIREF _prefixID_1))
 (rule _prefixID_3 "4.3"
  (first IRIREF)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq IRIREF _prefixID_1))
 (rule _prefixID_4 "4.4"
  (first "." _eps)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq _prefixID_1))
 (rule base "5"
  (first BASE)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq BASE IRIREF _base_1))
 (rule _wrappedGraph_3 "5g.3"
  (first "}")
  (follow "(" ")" "," "." ";" ANON BASE BLANK_NODE_LABEL DECIMAL DOUBLE GRAPH
   INTEGER IRIREF PNAME_LN PNAME_NS PREFIX STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" _eof "a" "false" "true" "{" "}" )
  (seq "}"))
 (rule _wrappedGraph_2 "5g.2"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "[" "{" "}")
  (follow "(" ")" "," "." ";" ANON BASE BLANK_NODE_LABEL DECIMAL DOUBLE GRAPH
   INTEGER IRIREF PNAME_LN PNAME_NS PREFIX STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" _eof "a" "false" "true" "{" "}" )
  (seq _wrappedGraph_1 "}"))
 (rule _wrappedGraph_1 "5g.1"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "[" _eps "{")
  (follow "}")
  (alt _empty TriplesTemplate))
 (rule wrappedGraph "5g"
  (first "{")
  (follow "(" ")" "," "." ";" ANON BASE BLANK_NODE_LABEL DECIMAL DOUBLE GRAPH
   INTEGER IRIREF PNAME_LN PNAME_NS PREFIX STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" _eof "a" "false" "true" "{" "}" )
  (seq "{" _wrappedGraph_1 "}"))
 (rule _base_1 "5.1"
  (first "." _eps)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (alt _empty "."))
 (rule _base_2 "5.2"
  (first IRIREF)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq IRIREF _base_1))
 (rule _base_3 "5.3"
  (first "." _eps)
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "{" )
  (seq _base_1))
 (rule graphName "6g"
  (first ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS)
  (follow IRIREF PNAME_LN PNAME_NS "a" "{")
  (alt iri BlankNode))
 (rule TriplesSameSubject "6"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "[" "{")
  (follow "." "}")
  (alt _TriplesSameSubject_1 _TriplesSameSubject_2))
 (rule _TriplesSameSubject_1 "6.1"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "{")
  (follow "." "}")
  (seq subject PropertyListNotEmpty))
 (rule _TriplesSameSubject_2 "6.2"
  (first "[")
  (follow "." "}")
  (seq BlankNodePropertyList PropertyList))
 (rule _TriplesSameSubject_3 "6.3"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "." "}")
  (seq PropertyListNotEmpty))
 (rule _TriplesSameSubject_4 "6.4"
  (first IRIREF PNAME_LN PNAME_NS _eps "a")
  (follow "." "}")
  (seq PropertyList))
 (rule graphName1 "7g"
  (first "[")
  (follow "." IRIREF PNAME_LN PNAME_NS "a" "{")
  (seq BlankNodePropertyList))
 (rule ObjectList "8"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" "{" )
  (follow "." ";" "]" "}")
  (seq object _ObjectList_1))
 (rule _ObjectList_1 "8.1"
  (first "," _eps)
  (follow "." ";" "]" "}")
  (alt _empty _ObjectList_3))
 (rule _ObjectList_2 "8.2" (first ",") (follow "," "." ";" "]" "}") (seq "," object))
 (rule _ObjectList_3 "8.3"
  (first ",")
  (follow "." ";" "]" "}")
  (seq _ObjectList_2 _ObjectList_1))
 (rule _ObjectList_4 "8.4" (first "," _eps) (follow "." ";" "]" "}") (seq _ObjectList_1))
 (rule _ObjectList_5 "8.5" (first "," _eps) (follow "." ";" "]" "}") (seq _ObjectList_1))
 (rule _ObjectList_6 "8.6"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" "{" )
  (follow "," "." ";" "]" "}")
  (seq object))
 (rule Verb "9"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" "{" )
  (alt predicate "a"))
 (rule subject "10"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "{")
  (follow IRIREF PNAME_LN PNAME_NS "a")
  (alt iri BlankNode collection graphObject))
 (rule graphSubject "10g"
  (first "{")
  (follow "(" ANON BASE BLANK_NODE_LABEL GRAPH IRIREF PNAME_LN PNAME_NS PREFIX
   "[" _eof "a" "{" )
  (seq wrappedGraph))
 (rule predicate "11"
  (first IRIREF PNAME_LN PNAME_NS)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (seq iri))
 (rule graphObject "12g"
  (first "{")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (seq wrappedGraph))
 (rule object "12"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" "{" )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (alt iri BlankNode collection BlankNodePropertyList literal graphObject))
 (rule literal "13"
  (first DECIMAL DOUBLE INTEGER STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "false" "true" )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (alt RDFLiteral NumericLiteral BooleanLiteral))
 (rule BlankNodePropertyList "14"
  (first "[")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (seq "[" PropertyListNotEmpty "]"))
 (rule _BlankNodePropertyList_1 "14.1"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (seq PropertyListNotEmpty "]"))
 (rule _BlankNodePropertyList_2 "14.2"
  (first "]")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (seq "]"))
 (rule collection "15"
  (first "(")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (seq "(" _collection_1 ")"))
 (rule _collection_1 "15.1"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" _eps "false" "true" "{"
  )
  (follow ")")
  (alt _empty _collection_2))
 (rule _collection_2 "15.2"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" "{" )
  (follow ")")
  (seq object _collection_1))
 (rule _collection_3 "15.3"
  (first "(" ")" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" "{" )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (seq _collection_1 ")"))
 (rule _collection_4 "15.4"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" _eps "false" "true" "{"
  )
  (follow ")")
  (seq _collection_1))
 (rule _collection_5 "15.5"
  (first ")")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (seq ")"))
 (rule NumericLiteral "16"
  (first DECIMAL DOUBLE INTEGER)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (alt INTEGER DECIMAL DOUBLE))
 (rule String "17"
  (first STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF LANGTAG PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "^^" "false" "true" "{" "}" )
  (alt STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_LONG_QUOTE ))
 (terminal IRIREF "18" (seq "<" (star (alt (range "^#x00-#x20<>\"{}|^`\\") UCHAR)) ">"))
 (terminal INTEGER "19" (seq (opt (range "+-")) (plus (range "0-9"))))
 (terminal DECIMAL "20"
  (seq (opt (range "+-")) (seq (star (range "0-9")) "." (plus (range "0-9")))))
 (terminal DOUBLE "21"
  (seq
   (opt (range "+-"))
   (alt
    (seq (plus (range "0-9")) "." (star (range "0-9")) EXPONENT)
    (seq "." (plus (range "0-9")) EXPONENT)
    (seq (plus (range "0-9")) EXPONENT)) ))
 (terminal STRING_LITERAL_QUOTE "22"
  (seq "\"" (star (alt (range "^#x22#x5C#xA#xD") ECHAR UCHAR)) "\""))
 (terminal STRING_LITERAL_SINGLE_QUOTE "23"
  (seq "'" (star (alt (range "^#x27#x5C#xA#xD") ECHAR UCHAR)) "'"))
 (terminal STRING_LITERAL_LONG_SINGLE_QUOTE "24"
  (seq "'''" (star (seq (opt (alt "'" "''")) (alt (range "^'\\") ECHAR UCHAR))) "'''"))
 (terminal STRING_LITERAL_LONG_QUOTE "25"
  (seq "\"\"\"" (star (seq (opt (alt "\"" "\"\"")) (alt (range "^\"\\") ECHAR UCHAR))) "\"\"\""))
 (terminal UCHAR "26"
  (alt (seq "\\u" HEX HEX HEX HEX) (seq "\\U" HEX HEX HEX HEX HEX HEX HEX HEX)))
 (terminal PREFIX "28t"
  (seq (opt "@") (range "Pp") (range "Rr") (range "Ee") (range "Ff") (range "Ii") (range "Xx")))
 (terminal BASE "29t" (seq (opt "@") (range "Bb") (range "Aa") (range "Ss") (range "Ee")))
 (rule _TriplesTemplate_1 "52s.1"
  (first "." _eps)
  (follow "}")
  (alt _empty _TriplesTemplate_2))
 (rule _TriplesTemplate_5 "52s.5"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "[" _eps "{")
  (follow "}")
  (seq _TriplesTemplate_3))
 (rule _TriplesTemplate_4 "52s.4" (first "." _eps) (follow "}") (seq _TriplesTemplate_1))
 (rule _TriplesTemplate_2 "52s.2" (first ".") (follow "}") (seq "." _TriplesTemplate_3))
 (rule _TriplesTemplate_3 "52s.3"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "[" _eps "{")
  (follow "}")
  (alt _empty TriplesTemplate))
 (rule TriplesTemplate "52s"
  (first "(" ANON BLANK_NODE_LABEL IRIREF PNAME_LN PNAME_NS "[" "{")
  (follow "}")
  (seq TriplesSameSubject _TriplesTemplate_1))
 (rule PropertyList "76s"
  (first IRIREF PNAME_LN PNAME_NS _eps "a")
  (follow "." "}")
  (alt _empty PropertyListNotEmpty))
 (rule PropertyListNotEmpty "77s"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "." "]" "}")
  (seq Verb ObjectList _PropertyListNotEmpty_1))
 (rule _PropertyListNotEmpty_9 "77s.9"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" "{" )
  (follow "." ";" "]" "}")
  (seq ObjectList))
 (rule _PropertyListNotEmpty_8 "77s.8"
  (first IRIREF PNAME_LN PNAME_NS _eps "a")
  (follow "." ";" "]" "}")
  (seq _PropertyListNotEmpty_4))
 (rule _PropertyListNotEmpty_7 "77s.7"
  (first ";" _eps)
  (follow "." "]" "}")
  (seq _PropertyListNotEmpty_1))
 (rule _PropertyListNotEmpty_6 "77s.6"
  (first "(" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER IRIREF PNAME_LN
   PNAME_NS STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE "[" "false" "true" "{" )
  (follow "." "]" "}")
  (seq ObjectList _PropertyListNotEmpty_1))
 (rule _PropertyListNotEmpty_5 "77s.5"
  (first IRIREF PNAME_LN PNAME_NS "a")
  (follow "." ";" "]" "}")
  (seq Verb ObjectList))
 (rule _PropertyListNotEmpty_3 "77s.3"
  (first ";")
  (follow "." "]" "}")
  (seq _PropertyListNotEmpty_2 _PropertyListNotEmpty_1))
 (rule _PropertyListNotEmpty_4 "77s.4"
  (first IRIREF PNAME_LN PNAME_NS _eps "a")
  (follow "." ";" "]" "}")
  (alt _empty _PropertyListNotEmpty_5))
 (rule _PropertyListNotEmpty_1 "77s.1"
  (first ";" _eps)
  (follow "." "]" "}")
  (alt _empty _PropertyListNotEmpty_3))
 (rule _PropertyListNotEmpty_2 "77s.2"
  (first ";")
  (follow "." ";" "]" "}")
  (seq ";" _PropertyListNotEmpty_4))
 (rule _RDFLiteral_4 "128s.4"
  (first LANGTAG "^^" _eps)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (seq _RDFLiteral_1))
 (rule RDFLiteral "128s"
  (first STRING_LITERAL_LONG_QUOTE STRING_LITERAL_LONG_SINGLE_QUOTE
   STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE )
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (seq String _RDFLiteral_1))
 (rule _RDFLiteral_3 "128s.3"
  (first "^^")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (seq "^^" iri))
 (rule _RDFLiteral_1 "128s.1"
  (first LANGTAG "^^" _eps)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (alt _empty _RDFLiteral_2))
 (rule _RDFLiteral_2 "128s.2"
  (first LANGTAG "^^")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (alt LANGTAG _RDFLiteral_3))
 (rule BooleanLiteral "133s"
  (first "false" "true")
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "false" "true" "{" "}" )
  (alt "true" "false"))
 (rule iri "135s"
  (first IRIREF PNAME_LN PNAME_NS)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (alt IRIREF PrefixedName))
 (rule PrefixedName "136s"
  (first PNAME_LN PNAME_NS)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (alt PNAME_LN PNAME_NS))
 (rule BlankNode "137s"
  (first ANON BLANK_NODE_LABEL)
  (follow "(" ")" "," "." ";" ANON BLANK_NODE_LABEL DECIMAL DOUBLE INTEGER
   IRIREF PNAME_LN PNAME_NS STRING_LITERAL_LONG_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_QUOTE
   STRING_LITERAL_SINGLE_QUOTE "[" "]" "a" "false" "true" "{" "}" )
  (alt BLANK_NODE_LABEL ANON))
 (terminal PNAME_NS "139s" (seq (opt PN_PREFIX) ":"))
 (terminal PNAME_LN "140s" (seq PNAME_NS PN_LOCAL))
 (terminal BLANK_NODE_LABEL "141s"
  (seq "_:" (alt PN_CHARS_U (range "0-9")) (opt (seq (star (alt PN_CHARS ".")) PN_CHARS))))
 (terminal LANGTAG "144s"
  (seq "@" (plus (range "a-zA-Z")) (star (seq "-" (plus (range "a-zA-Z0-9"))))))
 (terminal EXPONENT "154s" (seq (range "eE") (opt (range "+-")) (plus (range "0-9"))))
 (terminal ECHAR "159s" (seq "\\" (range "tbnrf\\\"'")))
 (terminal WS "161s" (alt (hex "#x20") (hex "#x9") (hex "#xD") (hex "#xA")))
 (terminal ANON "162s" (seq "[" (star WS) "]"))
 (terminal PN_CHARS_BASE "163s"
  (alt
   (range "A-Z")
   (range "a-z")
   (range "#x00C0-#x00D6")
   (range "#x00D8-#x00F6")
   (range "#x00F8-#x02FF")
   (range "#x0370-#x037D")
   (range "#x037F-#x1FFF")
   (range "#x200C-#x200D")
   (range "#x2070-#x218F")
   (range "#x2C00-#x2FEF")
   (range "#x3001-#xD7FF")
   (range "#xF900-#xFDCF")
   (range "#xFDF0-#xFFFD")
   (range "#x10000-#xEFFFF")) )
 (terminal PN_CHARS_U "164s" (alt PN_CHARS_BASE "_"))
 (terminal PN_CHARS "166s"
  (alt PN_CHARS_U "-"
   (range "0-9")
   (hex "#x00B7")
   (range "#x0300-#x036F")
   (range "#x203F-#x2040")) )
 (terminal PN_PREFIX "167s"
  (seq PN_CHARS_BASE (opt (seq (star (alt PN_CHARS ".")) PN_CHARS))))
 (terminal PN_LOCAL "168s"
  (seq
   (alt PN_CHARS_U ":" (range "0-9") PLX)
   (opt (seq (star (alt PN_CHARS "." ":" PLX)) (alt PN_CHARS ":" PLX)))) )
 (terminal PLX "169s" (alt PERCENT PN_LOCAL_ESC))
 (terminal PERCENT "170s" (seq "%" HEX HEX))
 (terminal HEX "171s" (alt (range "0-9") (range "A-F") (range "a-f")))
 (terminal PN_LOCAL_ESC "172s"
  (seq "\\"
   (alt "_" "~" "." "-" "!" "$" "&" "'" "(" ")" "*" "+" "," ";" "=" "/" "?" "#"
    "@" "%" )) ))
