(
 (rule _empty "0" (seq))
 (rule _trigDoc_1 "1g.1" (seq statement trigDoc))
 (rule trigDoc "1g" (alt _empty _trigDoc_1))
 (terminal GRAPH "1t" (seq (range "Gg") (range "Rr") (range "Aa") (range "Pp") (range "Hh")))
 (rule statement "2g" (alt directive tripleOrBareGraph graphword wrappedDefault))
 (rule _tripleOrBareGraph_3 "3g.3" (alt wrappedDefault _tripleOrBareGraph_4))
 (rule _tripleOrBareGraph_1 "3g.1" (seq graphName _tripleOrBareGraph_3))
 (rule _tripleOrBareGraph_4 "3g.4" (seq PropertyListNotEmpty "."))
 (rule _tripleOrBareGraph_2 "3g.2" (seq graphName1 _tripleOrBareGraph_5))
 (rule _tripleOrBareGraph_5 "3g.5" (alt wrappedDefault _tripleOrBareGraph_6))
 (rule tripleOrBareGraph "3g" (alt _tripleOrBareGraph_1 _tripleOrBareGraph_2))
 (rule _tripleOrBareGraph_7 "3g.7" (alt _empty PropertyListNotEmpty))
 (rule directive "3" (alt prefixID base))
 (rule _tripleOrBareGraph_6 "3g.6" (seq _tripleOrBareGraph_7 "."))
 (rule graphword "4g" (seq GRAPH graphName wrappedDefault))
 (rule prefixID "4" (seq PREFIX PNAME_NS IRIREF _prefixID_1))
 (rule _prefixID_1 "4.1" (alt _empty "."))
 (rule base "5" (seq BASE IRIREF _base_1))
 (rule wrappedDefault "5g" (seq "{" _wrappedDefault_1 "}"))
 (rule _wrappedDefault_1 "5g.1" (alt _empty TriplesTemplate))
 (rule _base_1 "5.1" (alt _empty "."))
 (rule TriplesSameSubject "6" (alt _TriplesSameSubject_1 _TriplesSameSubject_2))
 (rule graphName "6g" (alt iri BlankNode))
 (rule _TriplesSameSubject_1 "6.1" (seq subject PropertyListNotEmpty))
 (rule _TriplesSameSubject_2 "6.2" (seq BlankNodePropertyList PropertyList))
 (rule graphName1 "7g" (alt collection BlankNodePropertyList))
 (rule ObjectList "8" (seq object _ObjectList_1))
 (rule _ObjectList_1 "8.1" (alt _empty _ObjectList_3))
 (rule _ObjectList_2 "8.2" (seq "," object))
 (rule _ObjectList_3 "8.3" (seq _ObjectList_2 _ObjectList_1))
 (rule Verb "9" (alt predicate "a"))
 (rule subject "10" (alt iri BlankNode collection))
 (rule predicate "11" (seq iri))
 (rule object "12" (alt iri BlankNode collection BlankNodePropertyList literal))
 (rule literal "13" (alt RDFLiteral NumericLiteral BooleanLiteral))
 (rule BlankNodePropertyList "14" (seq "[" PropertyListNotEmpty "]"))
 (rule collection "15" (seq "(" _collection_1 ")"))
 (rule _collection_1 "15.1" (alt _empty _collection_2))
 (rule _collection_2 "15.2" (seq object _collection_1))
 (rule NumericLiteral "16" (alt INTEGER DECIMAL DOUBLE))
 (rule String "17"
  (alt STRING_LITERAL_QUOTE STRING_LITERAL_SINGLE_QUOTE
   STRING_LITERAL_LONG_SINGLE_QUOTE STRING_LITERAL_LONG_QUOTE ))
 (terminal IRIREF "18" (seq "<" (star (alt (range "^#x00-#x20<>\"{}|^`\\") UCHAR)) ">"))
 (terminal INTEGER "19" (seq (opt (range "+-")) (plus (range "0-9"))))
 (terminal DECIMAL "20"
  (seq (opt (range "+-")) (seq (star (range "0-9")) "." (plus (range "0-9")))))
 (terminal DOUBLE "21"
  (seq
   (opt (range "+-"))
   (alt
    (seq (plus (range "0-9")) "." (star (range "0-9")) EXPONENT)
    (seq "." (plus (range "0-9")) EXPONENT)
    (seq (plus (range "0-9")) EXPONENT)) ))
 (terminal STRING_LITERAL_QUOTE "22"
  (seq "\"" (star (alt (range "^#x22#x5C#xA#xD") ECHAR UCHAR)) "\""))
 (terminal STRING_LITERAL_SINGLE_QUOTE "23"
  (seq "'" (star (alt (range "^#x27#x5C#xA#xD") ECHAR UCHAR)) "'"))
 (terminal STRING_LITERAL_LONG_SINGLE_QUOTE "24"
  (seq "'''" (star (seq (opt (alt "'" "''")) (alt (range "^'\\") ECHAR UCHAR))) "'''"))
 (terminal STRING_LITERAL_LONG_QUOTE "25"
  (seq "\"\"\"" (star (seq (opt (alt "\"" "\"\"")) (alt (range "^\"\\") ECHAR UCHAR))) "\"\"\""))
 (terminal UCHAR "26"
  (alt (seq "\\u" HEX HEX HEX HEX) (seq "\\U" HEX HEX HEX HEX HEX HEX HEX HEX)))
 (terminal PREFIX "28t"
  (seq (opt "@") (range "Pp") (range "Rr") (range "Ee") (range "Ff") (range "Ii") (range "Xx")))
 (terminal BASE "29t" (seq (opt "@") (range "Bb") (range "Aa") (range "Ss") (range "Ee")))
 (rule TriplesTemplate "52s" (seq TriplesSameSubject _TriplesTemplate_1))
 (rule _TriplesTemplate_1 "52s.1" (alt _empty _TriplesTemplate_2))
 (rule _TriplesTemplate_2 "52s.2" (seq "." _TriplesTemplate_3))
 (rule _TriplesTemplate_3 "52s.3" (alt _empty TriplesTemplate))
 (rule PropertyList "76s" (alt _empty PropertyListNotEmpty))
 (rule _PropertyListNotEmpty_5 "77s.5" (seq Verb ObjectList))
 (rule _PropertyListNotEmpty_3 "77s.3"
  (seq _PropertyListNotEmpty_2 _PropertyListNotEmpty_1))
 (rule _PropertyListNotEmpty_2 "77s.2" (seq ";" _PropertyListNotEmpty_4))
 (rule _PropertyListNotEmpty_1 "77s.1" (alt _empty _PropertyListNotEmpty_3))
 (rule _PropertyListNotEmpty_4 "77s.4" (alt _empty _PropertyListNotEmpty_5))
 (rule PropertyListNotEmpty "77s" (seq Verb ObjectList _PropertyListNotEmpty_1))
 (rule _RDFLiteral_1 "128s.1" (alt _empty _RDFLiteral_2))
 (rule RDFLiteral "128s" (seq String _RDFLiteral_1))
 (rule _RDFLiteral_3 "128s.3" (seq "^^" iri))
 (rule _RDFLiteral_2 "128s.2" (alt LANGTAG _RDFLiteral_3))
 (rule BooleanLiteral "133s" (alt "true" "false"))
 (rule iri "135s" (alt IRIREF PrefixedName))
 (rule PrefixedName "136s" (alt PNAME_LN PNAME_NS))
 (rule BlankNode "137s" (alt BLANK_NODE_LABEL ANON))
 (terminal PNAME_NS "139s" (seq (opt PN_PREFIX) ":"))
 (terminal PNAME_LN "140s" (seq PNAME_NS PN_LOCAL))
 (terminal BLANK_NODE_LABEL "141s"
  (seq "_:" (alt PN_CHARS_U (range "0-9")) (opt (seq (star (alt PN_CHARS ".")) PN_CHARS))))
 (terminal LANGTAG "144s"
  (seq "@" (plus (range "a-zA-Z")) (star (seq "-" (plus (range "a-zA-Z0-9"))))))
 (terminal EXPONENT "154s" (seq (range "eE") (opt (range "+-")) (plus (range "0-9"))))
 (terminal ECHAR "159s" (seq "\\" (range "tbnrf\\\"'")))
 (terminal WS "161s" (alt (hex "#x20") (hex "#x9") (hex "#xD") (hex "#xA")))
 (terminal ANON "162s" (seq "[" (star WS) "]"))
 (terminal PN_CHARS_BASE "163s"
  (alt
   (range "A-Z")
   (range "a-z")
   (range "#x00C0-#x00D6")
   (range "#x00D8-#x00F6")
   (range "#x00F8-#x02FF")
   (range "#x0370-#x037D")
   (range "#x037F-#x1FFF")
   (range "#x200C-#x200D")
   (range "#x2070-#x218F")
   (range "#x2C00-#x2FEF")
   (range "#x3001-#xD7FF")
   (range "#xF900-#xFDCF")
   (range "#xFDF0-#xFFFD")
   (range "#x10000-#xEFFFF")) )
 (terminal PN_CHARS_U "164s" (alt PN_CHARS_BASE "_"))
 (terminal PN_CHARS "166s"
  (alt PN_CHARS_U "-"
   (range "0-9")
   (hex "#x00B7")
   (range "#x0300-#x036F")
   (range "#x203F-#x2040")) )
 (terminal PN_PREFIX "167s"
  (seq PN_CHARS_BASE (opt (seq (star (alt PN_CHARS ".")) PN_CHARS))))
 (terminal PN_LOCAL "168s"
  (seq
   (alt PN_CHARS_U ":" (range "0-9") PLX)
   (opt (seq (star (alt PN_CHARS "." ":" PLX)) (alt PN_CHARS ":" PLX)))) )
 (terminal PLX "169s" (alt PERCENT PN_LOCAL_ESC))
 (terminal PERCENT "170s" (seq "%" HEX HEX))
 (terminal HEX "171s" (alt (range "0-9") (range "A-F") (range "a-f")))
 (terminal PN_LOCAL_ESC "172s"
  (seq "\\"
   (alt "_" "~" "." "-" "!" "$" "&" "'" "(" ")" "*" "+" "," ";" "=" "/" "?" "#"
    "@" "%" )) ))
