# This file is automatically generated by /Users/gregg/.rvm/gems/ruby-2.0.0-p247/gems/ebnf-0.3.1/bin/ebnf
# BRANCH derived from etc/trig.bnf
module RDF::TriG::Meta
  START = :trigDoc

  BRANCH = {
    :BlankNode => {
      :ANON => [:ANON],
      :BLANK_NODE_LABEL => [:BLANK_NODE_LABEL],
    },
    :BooleanLiteral => {
      "false" => ["false"],
      "true" => ["true"],
    },
    :NumericLiteral => {
      :DECIMAL => [:DECIMAL],
      :DOUBLE => [:DOUBLE],
      :INTEGER => [:INTEGER],
    },
    :PrefixedName => {
      :PNAME_LN => [:PNAME_LN],
      :PNAME_NS => [:PNAME_NS],
    },
    :RDFLiteral => {
      :STRING_LITERAL_LONG_QUOTE => [:String, :_RDFLiteral_1],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:String, :_RDFLiteral_1],
      :STRING_LITERAL_QUOTE => [:String, :_RDFLiteral_1],
      :STRING_LITERAL_SINGLE_QUOTE => [:String, :_RDFLiteral_1],
    },
    :_RDFLiteral_1 => {
      "(" => [],
      ")" => [],
      "," => [],
      "." => [],
      ";" => [],
      :ANON => [],
      :BLANK_NODE_LABEL => [],
      :DECIMAL => [],
      :DOUBLE => [],
      :INTEGER => [],
      :IRIREF => [],
      :LANGTAG => [:_RDFLiteral_2],
      :PNAME_LN => [],
      :PNAME_NS => [],
      :STRING_LITERAL_LONG_QUOTE => [],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [],
      :STRING_LITERAL_QUOTE => [],
      :STRING_LITERAL_SINGLE_QUOTE => [],
      "[" => [],
      "]" => [],
      "^^" => [:_RDFLiteral_2],
      "false" => [],
      "true" => [],
      "}" => [],
    },
    :_RDFLiteral_2 => {
      :LANGTAG => [:LANGTAG],
      "^^" => [:_RDFLiteral_3],
    },
    :_RDFLiteral_3 => {
      "^^" => ["^^", :iri],
    },
    :String => {
      :STRING_LITERAL_LONG_QUOTE => [:STRING_LITERAL_LONG_QUOTE],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:STRING_LITERAL_LONG_SINGLE_QUOTE],
      :STRING_LITERAL_QUOTE => [:STRING_LITERAL_QUOTE],
      :STRING_LITERAL_SINGLE_QUOTE => [:STRING_LITERAL_SINGLE_QUOTE],
    },
    :base => {
      :BASE => [:BASE, :IRIREF, :_base_1],
    },
    :_base_1 => {
      "(" => [],
      "." => ["."],
      :ANON => [],
      :BASE => [],
      :BLANK_NODE_LABEL => [],
      :GRAPH => [],
      :IRIREF => [],
      :PNAME_LN => [],
      :PNAME_NS => [],
      :PREFIX => [],
      "[" => [],
      "{" => [],
    },
    :blank => {
      "(" => [:collection],
      :ANON => [:BlankNode],
      :BLANK_NODE_LABEL => [:BlankNode],
    },
    :blankNodePropertyList => {
      "[" => ["[", :predicateObjectList, "]"],
    },
    :block => {
      "(" => [:triples2],
      :ANON => [:triplesOrGraph],
      :BLANK_NODE_LABEL => [:triplesOrGraph],
      :GRAPH => [:_block_1],
      :IRIREF => [:triplesOrGraph],
      :PNAME_LN => [:triplesOrGraph],
      :PNAME_NS => [:triplesOrGraph],
      "[" => [:triples2],
      "{" => [:wrappedGraph],
    },
    :_block_1 => {
      :GRAPH => [:GRAPH, :labelOrSubject, :wrappedGraph],
    },
    :collection => {
      "(" => ["(", :_collection_1, ")"],
    },
    :_collection_1 => {
      "(" => [:_collection_2],
      ")" => [],
      :ANON => [:_collection_2],
      :BLANK_NODE_LABEL => [:_collection_2],
      :DECIMAL => [:_collection_2],
      :DOUBLE => [:_collection_2],
      :INTEGER => [:_collection_2],
      :IRIREF => [:_collection_2],
      :PNAME_LN => [:_collection_2],
      :PNAME_NS => [:_collection_2],
      :STRING_LITERAL_LONG_QUOTE => [:_collection_2],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:_collection_2],
      :STRING_LITERAL_QUOTE => [:_collection_2],
      :STRING_LITERAL_SINGLE_QUOTE => [:_collection_2],
      "[" => [:_collection_2],
      "false" => [:_collection_2],
      "true" => [:_collection_2],
    },
    :_collection_2 => {
      "(" => [:object, :_collection_1],
      :ANON => [:object, :_collection_1],
      :BLANK_NODE_LABEL => [:object, :_collection_1],
      :DECIMAL => [:object, :_collection_1],
      :DOUBLE => [:object, :_collection_1],
      :INTEGER => [:object, :_collection_1],
      :IRIREF => [:object, :_collection_1],
      :PNAME_LN => [:object, :_collection_1],
      :PNAME_NS => [:object, :_collection_1],
      :STRING_LITERAL_LONG_QUOTE => [:object, :_collection_1],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:object, :_collection_1],
      :STRING_LITERAL_QUOTE => [:object, :_collection_1],
      :STRING_LITERAL_SINGLE_QUOTE => [:object, :_collection_1],
      "[" => [:object, :_collection_1],
      "false" => [:object, :_collection_1],
      "true" => [:object, :_collection_1],
    },
    :directive => {
      :BASE => [:base],
      :PREFIX => [:prefixID],
    },
    :iri => {
      :IRIREF => [:IRIREF],
      :PNAME_LN => [:PrefixedName],
      :PNAME_NS => [:PrefixedName],
    },
    :labelOrSubject => {
      :ANON => [:BlankNode],
      :BLANK_NODE_LABEL => [:BlankNode],
      :IRIREF => [:iri],
      :PNAME_LN => [:iri],
      :PNAME_NS => [:iri],
    },
    :literal => {
      :DECIMAL => [:NumericLiteral],
      :DOUBLE => [:NumericLiteral],
      :INTEGER => [:NumericLiteral],
      :STRING_LITERAL_LONG_QUOTE => [:RDFLiteral],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:RDFLiteral],
      :STRING_LITERAL_QUOTE => [:RDFLiteral],
      :STRING_LITERAL_SINGLE_QUOTE => [:RDFLiteral],
      "false" => [:BooleanLiteral],
      "true" => [:BooleanLiteral],
    },
    :object => {
      "(" => [:blank],
      :ANON => [:blank],
      :BLANK_NODE_LABEL => [:blank],
      :DECIMAL => [:literal],
      :DOUBLE => [:literal],
      :INTEGER => [:literal],
      :IRIREF => [:iri],
      :PNAME_LN => [:iri],
      :PNAME_NS => [:iri],
      :STRING_LITERAL_LONG_QUOTE => [:literal],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:literal],
      :STRING_LITERAL_QUOTE => [:literal],
      :STRING_LITERAL_SINGLE_QUOTE => [:literal],
      "[" => [:blankNodePropertyList],
      "false" => [:literal],
      "true" => [:literal],
    },
    :objectList => {
      "(" => [:object, :_objectList_1],
      :ANON => [:object, :_objectList_1],
      :BLANK_NODE_LABEL => [:object, :_objectList_1],
      :DECIMAL => [:object, :_objectList_1],
      :DOUBLE => [:object, :_objectList_1],
      :INTEGER => [:object, :_objectList_1],
      :IRIREF => [:object, :_objectList_1],
      :PNAME_LN => [:object, :_objectList_1],
      :PNAME_NS => [:object, :_objectList_1],
      :STRING_LITERAL_LONG_QUOTE => [:object, :_objectList_1],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:object, :_objectList_1],
      :STRING_LITERAL_QUOTE => [:object, :_objectList_1],
      :STRING_LITERAL_SINGLE_QUOTE => [:object, :_objectList_1],
      "[" => [:object, :_objectList_1],
      "false" => [:object, :_objectList_1],
      "true" => [:object, :_objectList_1],
    },
    :_objectList_1 => {
      "," => [:_objectList_3],
      "." => [],
      ";" => [],
      "]" => [],
      "}" => [],
    },
    :_objectList_2 => {
      "," => [",", :object],
    },
    :_objectList_3 => {
      "," => [:_objectList_2, :_objectList_1],
    },
    :predicate => {
      :IRIREF => [:iri],
      :PNAME_LN => [:iri],
      :PNAME_NS => [:iri],
    },
    :predicateObjectList => {
      :IRIREF => [:verb, :objectList, :_predicateObjectList_1],
      :PNAME_LN => [:verb, :objectList, :_predicateObjectList_1],
      :PNAME_NS => [:verb, :objectList, :_predicateObjectList_1],
      "a" => [:verb, :objectList, :_predicateObjectList_1],
    },
    :_predicateObjectList_1 => {
      "." => [],
      ";" => [:_predicateObjectList_3],
      "]" => [],
      "}" => [],
    },
    :_predicateObjectList_2 => {
      ";" => [";", :_predicateObjectList_4],
    },
    :_predicateObjectList_3 => {
      ";" => [:_predicateObjectList_2, :_predicateObjectList_1],
    },
    :_predicateObjectList_4 => {
      "." => [],
      ";" => [],
      :IRIREF => [:_predicateObjectList_5],
      :PNAME_LN => [:_predicateObjectList_5],
      :PNAME_NS => [:_predicateObjectList_5],
      "]" => [],
      "a" => [:_predicateObjectList_5],
      "}" => [],
    },
    :_predicateObjectList_5 => {
      :IRIREF => [:verb, :objectList],
      :PNAME_LN => [:verb, :objectList],
      :PNAME_NS => [:verb, :objectList],
      "a" => [:verb, :objectList],
    },
    :prefixID => {
      :PREFIX => [:PREFIX, :PNAME_NS, :IRIREF, :_prefixID_1],
    },
    :_prefixID_1 => {
      "(" => [],
      "." => ["."],
      :ANON => [],
      :BASE => [],
      :BLANK_NODE_LABEL => [],
      :GRAPH => [],
      :IRIREF => [],
      :PNAME_LN => [],
      :PNAME_NS => [],
      :PREFIX => [],
      "[" => [],
      "{" => [],
    },
    :subject => {
      "(" => [:blank],
      :ANON => [:blank],
      :BLANK_NODE_LABEL => [:blank],
      :IRIREF => [:iri],
      :PNAME_LN => [:iri],
      :PNAME_NS => [:iri],
    },
    :trigDoc => {
      "(" => [:_trigDoc_2],
      :ANON => [:_trigDoc_2],
      :BASE => [:_trigDoc_2],
      :BLANK_NODE_LABEL => [:_trigDoc_2],
      :GRAPH => [:_trigDoc_2],
      :IRIREF => [:_trigDoc_2],
      :PNAME_LN => [:_trigDoc_2],
      :PNAME_NS => [:_trigDoc_2],
      :PREFIX => [:_trigDoc_2],
      "[" => [:_trigDoc_2],
      "{" => [:_trigDoc_2],
    },
    :_trigDoc_1 => {
      "(" => [:block],
      :ANON => [:block],
      :BASE => [:directive],
      :BLANK_NODE_LABEL => [:block],
      :GRAPH => [:block],
      :IRIREF => [:block],
      :PNAME_LN => [:block],
      :PNAME_NS => [:block],
      :PREFIX => [:directive],
      "[" => [:block],
      "{" => [:block],
    },
    :_trigDoc_2 => {
      "(" => [:_trigDoc_1, :trigDoc],
      :ANON => [:_trigDoc_1, :trigDoc],
      :BASE => [:_trigDoc_1, :trigDoc],
      :BLANK_NODE_LABEL => [:_trigDoc_1, :trigDoc],
      :GRAPH => [:_trigDoc_1, :trigDoc],
      :IRIREF => [:_trigDoc_1, :trigDoc],
      :PNAME_LN => [:_trigDoc_1, :trigDoc],
      :PNAME_NS => [:_trigDoc_1, :trigDoc],
      :PREFIX => [:_trigDoc_1, :trigDoc],
      "[" => [:_trigDoc_1, :trigDoc],
      "{" => [:_trigDoc_1, :trigDoc],
    },
    :triples => {
      "(" => [:_triples_1],
      :ANON => [:_triples_1],
      :BLANK_NODE_LABEL => [:_triples_1],
      :IRIREF => [:_triples_1],
      :PNAME_LN => [:_triples_1],
      :PNAME_NS => [:_triples_1],
      "[" => [:_triples_2],
    },
    :triples2 => {
      "(" => [:_triples2_2],
      "[" => [:_triples2_1],
    },
    :_triples2_1 => {
      "[" => [:blankNodePropertyList, :_triples2_3, "."],
    },
    :_triples2_2 => {
      "(" => [:collection, :predicateObjectList, "."],
    },
    :_triples2_3 => {
      "." => [],
      :IRIREF => [:predicateObjectList],
      :PNAME_LN => [:predicateObjectList],
      :PNAME_NS => [:predicateObjectList],
      "a" => [:predicateObjectList],
    },
    :triplesBlock => {
      "(" => [:triples, :_triplesBlock_1],
      :ANON => [:triples, :_triplesBlock_1],
      :BLANK_NODE_LABEL => [:triples, :_triplesBlock_1],
      :IRIREF => [:triples, :_triplesBlock_1],
      :PNAME_LN => [:triples, :_triplesBlock_1],
      :PNAME_NS => [:triples, :_triplesBlock_1],
      "[" => [:triples, :_triplesBlock_1],
    },
    :_triplesBlock_1 => {
      "." => [:_triplesBlock_2],
      "}" => [],
    },
    :_triplesBlock_2 => {
      "." => [".", :_triplesBlock_3],
    },
    :_triplesBlock_3 => {
      "(" => [:triplesBlock],
      :ANON => [:triplesBlock],
      :BLANK_NODE_LABEL => [:triplesBlock],
      :IRIREF => [:triplesBlock],
      :PNAME_LN => [:triplesBlock],
      :PNAME_NS => [:triplesBlock],
      "[" => [:triplesBlock],
      "}" => [],
    },
    :triplesOrGraph => {
      :ANON => [:labelOrSubject, :_triplesOrGraph_1],
      :BLANK_NODE_LABEL => [:labelOrSubject, :_triplesOrGraph_1],
      :IRIREF => [:labelOrSubject, :_triplesOrGraph_1],
      :PNAME_LN => [:labelOrSubject, :_triplesOrGraph_1],
      :PNAME_NS => [:labelOrSubject, :_triplesOrGraph_1],
    },
    :_triplesOrGraph_1 => {
      :IRIREF => [:_triplesOrGraph_2],
      :PNAME_LN => [:_triplesOrGraph_2],
      :PNAME_NS => [:_triplesOrGraph_2],
      "a" => [:_triplesOrGraph_2],
      "{" => [:wrappedGraph],
    },
    :_triplesOrGraph_2 => {
      :IRIREF => [:predicateObjectList, "."],
      :PNAME_LN => [:predicateObjectList, "."],
      :PNAME_NS => [:predicateObjectList, "."],
      "a" => [:predicateObjectList, "."],
    },
    :_triples_1 => {
      "(" => [:subject, :predicateObjectList],
      :ANON => [:subject, :predicateObjectList],
      :BLANK_NODE_LABEL => [:subject, :predicateObjectList],
      :IRIREF => [:subject, :predicateObjectList],
      :PNAME_LN => [:subject, :predicateObjectList],
      :PNAME_NS => [:subject, :predicateObjectList],
    },
    :_triples_2 => {
      "[" => [:blankNodePropertyList, :_triples_3],
    },
    :_triples_3 => {
      "." => [],
      :IRIREF => [:predicateObjectList],
      :PNAME_LN => [:predicateObjectList],
      :PNAME_NS => [:predicateObjectList],
      "a" => [:predicateObjectList],
      "}" => [],
    },
    :verb => {
      :IRIREF => [:predicate],
      :PNAME_LN => [:predicate],
      :PNAME_NS => [:predicate],
      "a" => ["a"],
    },
    :wrappedGraph => {
      "{" => ["{", :_wrappedGraph_1, "}"],
    },
    :_wrappedGraph_1 => {
      "(" => [:triplesBlock],
      :ANON => [:triplesBlock],
      :BLANK_NODE_LABEL => [:triplesBlock],
      :IRIREF => [:triplesBlock],
      :PNAME_LN => [:triplesBlock],
      :PNAME_NS => [:triplesBlock],
      "[" => [:triplesBlock],
      "}" => [],
    },
  }.freeze
  TERMINALS = [
    "(",
    ")",
    ",",
    ".",
    ";",
    :ANON,
    :BASE,
    :BLANK_NODE_LABEL,
    :DECIMAL,
    :DOUBLE,
    :GRAPH,
    :INTEGER,
    :IRIREF,
    :LANGTAG,
    :PNAME_LN,
    :PNAME_NS,
    :PREFIX,
    :STRING_LITERAL_LONG_QUOTE,
    :STRING_LITERAL_LONG_SINGLE_QUOTE,
    :STRING_LITERAL_QUOTE,
    :STRING_LITERAL_SINGLE_QUOTE,
    "[",
    "]",
    "^^",
    "a",
    "false",
    "true",
    "{",
    "}"
  ].freeze
  FIRST = {
    :BlankNode => [
      :BLANK_NODE_LABEL,
      :ANON],
    :BooleanLiteral => [
      "true",
      "false"],
    :NumericLiteral => [
      :INTEGER,
      :DECIMAL,
      :DOUBLE],
    :PrefixedName => [
      :PNAME_LN,
      :PNAME_NS],
    :RDFLiteral => [
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_1 => [
      :_eps,
      :LANGTAG,
      "^^"],
    :_RDFLiteral_2 => [
      :LANGTAG,
      "^^"],
    :_RDFLiteral_3 => [
      "^^"],
    :_RDFLiteral_4 => [
      :LANGTAG,
      :_eps,
      "^^"],
    :String => [
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :base => [
      :BASE],
    :_base_1 => [
      ".",
      :_eps],
    :_base_2 => [
      :IRIREF],
    :_base_3 => [
      ".",
      :_eps],
    :blank => [
      :BLANK_NODE_LABEL,
      :ANON,
      "("],
    :blankNodePropertyList => [
      "["],
    :_blankNodePropertyList_1 => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_blankNodePropertyList_2 => [
      "]"],
    :block => [
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_block_1 => [
      :GRAPH],
    :_block_2 => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      :PNAME_LN,
      :PNAME_NS],
    :_block_3 => [
      "{"],
    :collection => [
      "("],
    :_collection_1 => [
      :_eps,
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_2 => [
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_3 => [
      ")",
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_4 => [
      :_eps,
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_5 => [
      ")"],
    :directive => [
      :PREFIX,
      :BASE],
    :_empty => [
      :_eps],
    :iri => [
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :labelOrSubject => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      :PNAME_LN,
      :PNAME_NS],
    :literal => [
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :object => [
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :objectList => [
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_objectList_1 => [
      :_eps,
      ","],
    :_objectList_2 => [
      ","],
    :_objectList_3 => [
      ","],
    :_objectList_4 => [
      :_eps,
      ","],
    :_objectList_5 => [
      :_eps,
      ","],
    :_objectList_6 => [
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :predicate => [
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :predicateObjectList => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_predicateObjectList_1 => [
      :_eps,
      ";"],
    :_predicateObjectList_2 => [
      ";"],
    :_predicateObjectList_3 => [
      ";"],
    :_predicateObjectList_4 => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_predicateObjectList_5 => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_predicateObjectList_6 => [
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_predicateObjectList_7 => [
      :_eps,
      ";"],
    :_predicateObjectList_8 => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_predicateObjectList_9 => [
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :prefixID => [
      :PREFIX],
    :_prefixID_1 => [
      ".",
      :_eps],
    :_prefixID_2 => [
      :PNAME_NS],
    :_prefixID_3 => [
      :IRIREF],
    :_prefixID_4 => [
      ".",
      :_eps],
    :subject => [
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "("],
    :trigDoc => [
      :_eps,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_trigDoc_1 => [
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_trigDoc_2 => [
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_trigDoc_3 => [
      :_eps,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :triples => [
      "[",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "("],
    :triples2 => [
      "[",
      "("],
    :_triples2_1 => [
      "["],
    :_triples2_2 => [
      "("],
    :_triples2_3 => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_triples2_4 => [
      ".",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :triplesBlock => [
      "[",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "("],
    :_triplesBlock_1 => [
      :_eps,
      "."],
    :_triplesBlock_2 => [
      "."],
    :_triplesBlock_3 => [
      :_eps,
      "[",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "("],
    :_triplesBlock_4 => [
      ".",
      :_eps],
    :_triplesBlock_5 => [
      :_eps,
      "[",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "("],
    :triplesOrGraph => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      :PNAME_LN,
      :PNAME_NS],
    :_triplesOrGraph_1 => [
      "{",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_triplesOrGraph_2 => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_triplesOrGraph_3 => [
      "{",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_triplesOrGraph_4 => [
      "."],
    :_triples_1 => [
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "("],
    :_triples_2 => [
      "["],
    :_triples_3 => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_triples_4 => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_triples_5 => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :verb => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :wrappedGraph => [
      "{"],
    :_wrappedGraph_1 => [
      :_eps,
      "[",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "("],
    :_wrappedGraph_2 => [
      "}",
      "[",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "("],
    :_wrappedGraph_3 => [
      "}"],
  }.freeze
  FOLLOW = {
    :BlankNode => [
      "{",
      "a",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :BooleanLiteral => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :NumericLiteral => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :PrefixedName => [
      "{",
      "a",
      :IRIREF,
      "[",
      ")",
      ",",
      ".",
      "]",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      ";",
      "}",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :RDFLiteral => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_1 => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_2 => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_3 => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_4 => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :String => [
      :LANGTAG,
      "^^",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :base => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_base_1 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_base_2 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_base_3 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :blank => [
      "a",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :blankNodePropertyList => [
      ".",
      "}",
      "a",
      ")",
      ",",
      "]",
      :IRIREF,
      "[",
      ";",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_blankNodePropertyList_1 => [
      ".",
      "}",
      "a",
      ")",
      ",",
      "]",
      :IRIREF,
      "[",
      ";",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_blankNodePropertyList_2 => [
      ".",
      "}",
      "a",
      ")",
      ",",
      "]",
      :IRIREF,
      "[",
      ";",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :block => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_block_1 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_block_2 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_block_3 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :collection => [
      "a",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_1 => [
      ")"],
    :_collection_2 => [
      ")"],
    :_collection_3 => [
      "a",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_4 => [
      ")"],
    :_collection_5 => [
      "a",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :directive => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :iri => [
      "{",
      "a",
      :IRIREF,
      "[",
      ")",
      ",",
      ".",
      "]",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      ";",
      "}",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :labelOrSubject => [
      "{",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :literal => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :object => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :objectList => [
      ".",
      "]",
      ";",
      "}"],
    :_objectList_1 => [
      ".",
      "]",
      ";",
      "}"],
    :_objectList_2 => [
      ",",
      ".",
      "]",
      ";",
      "}"],
    :_objectList_3 => [
      ".",
      "]",
      ";",
      "}"],
    :_objectList_4 => [
      ".",
      "]",
      ";",
      "}"],
    :_objectList_5 => [
      ".",
      "]",
      ";",
      "}"],
    :_objectList_6 => [
      ",",
      ".",
      "]",
      ";",
      "}"],
    :predicate => [
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      ")",
      ",",
      ".",
      "]",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE,
      ";",
      "}"],
    :predicateObjectList => [
      ".",
      "]",
      "}"],
    :_predicateObjectList_1 => [
      ".",
      "]",
      "}"],
    :_predicateObjectList_2 => [
      ".",
      ";",
      "]",
      "}"],
    :_predicateObjectList_3 => [
      ".",
      "]",
      "}"],
    :_predicateObjectList_4 => [
      ".",
      ";",
      "]",
      "}"],
    :_predicateObjectList_5 => [
      ".",
      ";",
      "]",
      "}"],
    :_predicateObjectList_6 => [
      ".",
      "]",
      "}"],
    :_predicateObjectList_7 => [
      ".",
      "]",
      "}"],
    :_predicateObjectList_8 => [
      ".",
      ";",
      "]",
      "}"],
    :_predicateObjectList_9 => [
      ".",
      ";",
      "]",
      "}"],
    :prefixID => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_prefixID_1 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_prefixID_2 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_prefixID_3 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_prefixID_4 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :subject => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :trigDoc => [
      :_eof],
    :_trigDoc_1 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_trigDoc_2 => [
      :_eof],
    :_trigDoc_3 => [
      :_eof],
    :triples => [
      ".",
      "}"],
    :triples2 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_triples2_1 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_triples2_2 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_triples2_3 => [
      "."],
    :_triples2_4 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :triplesBlock => [
      "}"],
    :_triplesBlock_1 => [
      "}"],
    :_triplesBlock_2 => [
      "}"],
    :_triplesBlock_3 => [
      "}"],
    :_triplesBlock_4 => [
      "}"],
    :_triplesBlock_5 => [
      "}"],
    :triplesOrGraph => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_triplesOrGraph_1 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_triplesOrGraph_2 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_triplesOrGraph_3 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_triplesOrGraph_4 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_triples_1 => [
      ".",
      "}"],
    :_triples_2 => [
      ".",
      "}"],
    :_triples_3 => [
      ".",
      "}"],
    :_triples_4 => [
      ".",
      "}"],
    :_triples_5 => [
      ".",
      "}"],
    :verb => [
      :IRIREF,
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :wrappedGraph => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_wrappedGraph_1 => [
      "}"],
    :_wrappedGraph_2 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_wrappedGraph_3 => [
      :_eof,
      :PREFIX,
      :BASE,
      "{",
      :GRAPH,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "[",
      "(",
      :PNAME_LN,
      :PNAME_NS],
  }.freeze
end

