# This file is automatically generated by /Users/gregg/.rvm/gems/ruby-1.9.3-p448/gems/ebnf-0.3.1/bin/ebnf
# BRANCH derived from etc/trig.bnf
module RDF::TriG::Meta
  START = :trigDoc

  BRANCH = {
    :BlankNode => {
      :ANON => [:ANON],
      :BLANK_NODE_LABEL => [:BLANK_NODE_LABEL],
    },
    :BlankNodePropertyList => {
      "[" => ["[", :PropertyListNotEmpty, "]"],
    },
    :BooleanLiteral => {
      "false" => ["false"],
      "true" => ["true"],
    },
    :NumericLiteral => {
      :DECIMAL => [:DECIMAL],
      :DOUBLE => [:DOUBLE],
      :INTEGER => [:INTEGER],
    },
    :ObjectList => {
      "(" => [:object, :_ObjectList_1],
      :ANON => [:object, :_ObjectList_1],
      :BLANK_NODE_LABEL => [:object, :_ObjectList_1],
      :DECIMAL => [:object, :_ObjectList_1],
      :DOUBLE => [:object, :_ObjectList_1],
      :INTEGER => [:object, :_ObjectList_1],
      :IRIREF => [:object, :_ObjectList_1],
      :PNAME_LN => [:object, :_ObjectList_1],
      :PNAME_NS => [:object, :_ObjectList_1],
      :STRING_LITERAL_LONG_QUOTE => [:object, :_ObjectList_1],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:object, :_ObjectList_1],
      :STRING_LITERAL_QUOTE => [:object, :_ObjectList_1],
      :STRING_LITERAL_SINGLE_QUOTE => [:object, :_ObjectList_1],
      "[" => [:object, :_ObjectList_1],
      "false" => [:object, :_ObjectList_1],
      "true" => [:object, :_ObjectList_1],
    },
    :_ObjectList_1 => {
      "," => [:_ObjectList_3],
      "." => [],
      ";" => [],
      "]" => [],
      "}" => [],
    },
    :_ObjectList_2 => {
      "," => [",", :object],
    },
    :_ObjectList_3 => {
      "," => [:_ObjectList_2, :_ObjectList_1],
    },
    :PrefixedName => {
      :PNAME_LN => [:PNAME_LN],
      :PNAME_NS => [:PNAME_NS],
    },
    :PropertyList => {
      "." => [],
      :IRIREF => [:PropertyListNotEmpty],
      :PNAME_LN => [:PropertyListNotEmpty],
      :PNAME_NS => [:PropertyListNotEmpty],
      "a" => [:PropertyListNotEmpty],
      "}" => [],
    },
    :PropertyListNotEmpty => {
      :IRIREF => [:Verb, :ObjectList, :_PropertyListNotEmpty_1],
      :PNAME_LN => [:Verb, :ObjectList, :_PropertyListNotEmpty_1],
      :PNAME_NS => [:Verb, :ObjectList, :_PropertyListNotEmpty_1],
      "a" => [:Verb, :ObjectList, :_PropertyListNotEmpty_1],
    },
    :_PropertyListNotEmpty_1 => {
      "." => [],
      ";" => [:_PropertyListNotEmpty_3],
      "]" => [],
      "}" => [],
    },
    :_PropertyListNotEmpty_2 => {
      ";" => [";", :_PropertyListNotEmpty_4],
    },
    :_PropertyListNotEmpty_3 => {
      ";" => [:_PropertyListNotEmpty_2, :_PropertyListNotEmpty_1],
    },
    :_PropertyListNotEmpty_4 => {
      "." => [],
      ";" => [],
      :IRIREF => [:_PropertyListNotEmpty_5],
      :PNAME_LN => [:_PropertyListNotEmpty_5],
      :PNAME_NS => [:_PropertyListNotEmpty_5],
      "]" => [],
      "a" => [:_PropertyListNotEmpty_5],
      "}" => [],
    },
    :_PropertyListNotEmpty_5 => {
      :IRIREF => [:Verb, :ObjectList],
      :PNAME_LN => [:Verb, :ObjectList],
      :PNAME_NS => [:Verb, :ObjectList],
      "a" => [:Verb, :ObjectList],
    },
    :RDFLiteral => {
      :STRING_LITERAL_LONG_QUOTE => [:String, :_RDFLiteral_1],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:String, :_RDFLiteral_1],
      :STRING_LITERAL_QUOTE => [:String, :_RDFLiteral_1],
      :STRING_LITERAL_SINGLE_QUOTE => [:String, :_RDFLiteral_1],
    },
    :_RDFLiteral_1 => {
      "(" => [],
      ")" => [],
      "," => [],
      "." => [],
      ";" => [],
      :ANON => [],
      :BLANK_NODE_LABEL => [],
      :DECIMAL => [],
      :DOUBLE => [],
      :INTEGER => [],
      :IRIREF => [],
      :LANGTAG => [:_RDFLiteral_2],
      :PNAME_LN => [],
      :PNAME_NS => [],
      :STRING_LITERAL_LONG_QUOTE => [],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [],
      :STRING_LITERAL_QUOTE => [],
      :STRING_LITERAL_SINGLE_QUOTE => [],
      "[" => [],
      "]" => [],
      "^^" => [:_RDFLiteral_2],
      "false" => [],
      "true" => [],
      "}" => [],
    },
    :_RDFLiteral_2 => {
      :LANGTAG => [:LANGTAG],
      "^^" => [:_RDFLiteral_3],
    },
    :_RDFLiteral_3 => {
      "^^" => ["^^", :iri],
    },
    :String => {
      :STRING_LITERAL_LONG_QUOTE => [:STRING_LITERAL_LONG_QUOTE],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:STRING_LITERAL_LONG_SINGLE_QUOTE],
      :STRING_LITERAL_QUOTE => [:STRING_LITERAL_QUOTE],
      :STRING_LITERAL_SINGLE_QUOTE => [:STRING_LITERAL_SINGLE_QUOTE],
    },
    :TriplesSameSubject => {
      "(" => [:_TriplesSameSubject_1],
      :ANON => [:_TriplesSameSubject_1],
      :BLANK_NODE_LABEL => [:_TriplesSameSubject_1],
      :IRIREF => [:_TriplesSameSubject_1],
      :PNAME_LN => [:_TriplesSameSubject_1],
      :PNAME_NS => [:_TriplesSameSubject_1],
      "[" => [:_TriplesSameSubject_2],
    },
    :_TriplesSameSubject_1 => {
      "(" => [:subject, :PropertyListNotEmpty],
      :ANON => [:subject, :PropertyListNotEmpty],
      :BLANK_NODE_LABEL => [:subject, :PropertyListNotEmpty],
      :IRIREF => [:subject, :PropertyListNotEmpty],
      :PNAME_LN => [:subject, :PropertyListNotEmpty],
      :PNAME_NS => [:subject, :PropertyListNotEmpty],
    },
    :_TriplesSameSubject_2 => {
      "[" => [:BlankNodePropertyList, :PropertyList],
    },
    :TriplesTemplate => {
      "(" => [:TriplesSameSubject, :_TriplesTemplate_1],
      :ANON => [:TriplesSameSubject, :_TriplesTemplate_1],
      :BLANK_NODE_LABEL => [:TriplesSameSubject, :_TriplesTemplate_1],
      :IRIREF => [:TriplesSameSubject, :_TriplesTemplate_1],
      :PNAME_LN => [:TriplesSameSubject, :_TriplesTemplate_1],
      :PNAME_NS => [:TriplesSameSubject, :_TriplesTemplate_1],
      "[" => [:TriplesSameSubject, :_TriplesTemplate_1],
    },
    :_TriplesTemplate_1 => {
      "." => [:_TriplesTemplate_2],
      "}" => [],
    },
    :_TriplesTemplate_2 => {
      "." => [".", :_TriplesTemplate_3],
    },
    :_TriplesTemplate_3 => {
      "(" => [:TriplesTemplate],
      :ANON => [:TriplesTemplate],
      :BLANK_NODE_LABEL => [:TriplesTemplate],
      :IRIREF => [:TriplesTemplate],
      :PNAME_LN => [:TriplesTemplate],
      :PNAME_NS => [:TriplesTemplate],
      "[" => [:TriplesTemplate],
      "}" => [],
    },
    :Verb => {
      :IRIREF => [:predicate],
      :PNAME_LN => [:predicate],
      :PNAME_NS => [:predicate],
      "a" => ["a"],
    },
    :base => {
      :BASE => [:BASE, :IRIREF, :_base_1],
    },
    :_base_1 => {
      "(" => [],
      "." => ["."],
      :ANON => [],
      :BASE => [],
      :BLANK_NODE_LABEL => [],
      :GRAPH => [],
      :IRIREF => [],
      :PNAME_LN => [],
      :PNAME_NS => [],
      :PREFIX => [],
      "[" => [],
      "{" => [],
    },
    :collection => {
      "(" => ["(", :_collection_1, ")"],
    },
    :_collection_1 => {
      "(" => [:_collection_2],
      ")" => [],
      :ANON => [:_collection_2],
      :BLANK_NODE_LABEL => [:_collection_2],
      :DECIMAL => [:_collection_2],
      :DOUBLE => [:_collection_2],
      :INTEGER => [:_collection_2],
      :IRIREF => [:_collection_2],
      :PNAME_LN => [:_collection_2],
      :PNAME_NS => [:_collection_2],
      :STRING_LITERAL_LONG_QUOTE => [:_collection_2],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:_collection_2],
      :STRING_LITERAL_QUOTE => [:_collection_2],
      :STRING_LITERAL_SINGLE_QUOTE => [:_collection_2],
      "[" => [:_collection_2],
      "false" => [:_collection_2],
      "true" => [:_collection_2],
    },
    :_collection_2 => {
      "(" => [:object, :_collection_1],
      :ANON => [:object, :_collection_1],
      :BLANK_NODE_LABEL => [:object, :_collection_1],
      :DECIMAL => [:object, :_collection_1],
      :DOUBLE => [:object, :_collection_1],
      :INTEGER => [:object, :_collection_1],
      :IRIREF => [:object, :_collection_1],
      :PNAME_LN => [:object, :_collection_1],
      :PNAME_NS => [:object, :_collection_1],
      :STRING_LITERAL_LONG_QUOTE => [:object, :_collection_1],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:object, :_collection_1],
      :STRING_LITERAL_QUOTE => [:object, :_collection_1],
      :STRING_LITERAL_SINGLE_QUOTE => [:object, :_collection_1],
      "[" => [:object, :_collection_1],
      "false" => [:object, :_collection_1],
      "true" => [:object, :_collection_1],
    },
    :directive => {
      :BASE => [:base],
      :PREFIX => [:prefixID],
    },
    :graphName => {
      :ANON => [:BlankNode],
      :BLANK_NODE_LABEL => [:BlankNode],
      :IRIREF => [:iri],
      :PNAME_LN => [:iri],
      :PNAME_NS => [:iri],
    },
    :graphName1 => {
      "(" => [:collection],
      "[" => [:BlankNodePropertyList],
    },
    :graphword => {
      :GRAPH => [:GRAPH, :graphName, :wrappedDefault],
    },
    :iri => {
      :IRIREF => [:IRIREF],
      :PNAME_LN => [:PrefixedName],
      :PNAME_NS => [:PrefixedName],
    },
    :literal => {
      :DECIMAL => [:NumericLiteral],
      :DOUBLE => [:NumericLiteral],
      :INTEGER => [:NumericLiteral],
      :STRING_LITERAL_LONG_QUOTE => [:RDFLiteral],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:RDFLiteral],
      :STRING_LITERAL_QUOTE => [:RDFLiteral],
      :STRING_LITERAL_SINGLE_QUOTE => [:RDFLiteral],
      "false" => [:BooleanLiteral],
      "true" => [:BooleanLiteral],
    },
    :object => {
      "(" => [:collection],
      :ANON => [:BlankNode],
      :BLANK_NODE_LABEL => [:BlankNode],
      :DECIMAL => [:literal],
      :DOUBLE => [:literal],
      :INTEGER => [:literal],
      :IRIREF => [:iri],
      :PNAME_LN => [:iri],
      :PNAME_NS => [:iri],
      :STRING_LITERAL_LONG_QUOTE => [:literal],
      :STRING_LITERAL_LONG_SINGLE_QUOTE => [:literal],
      :STRING_LITERAL_QUOTE => [:literal],
      :STRING_LITERAL_SINGLE_QUOTE => [:literal],
      "[" => [:BlankNodePropertyList],
      "false" => [:literal],
      "true" => [:literal],
    },
    :predicate => {
      :IRIREF => [:iri],
      :PNAME_LN => [:iri],
      :PNAME_NS => [:iri],
    },
    :prefixID => {
      :PREFIX => [:PREFIX, :PNAME_NS, :IRIREF, :_prefixID_1],
    },
    :_prefixID_1 => {
      "(" => [],
      "." => ["."],
      :ANON => [],
      :BASE => [],
      :BLANK_NODE_LABEL => [],
      :GRAPH => [],
      :IRIREF => [],
      :PNAME_LN => [],
      :PNAME_NS => [],
      :PREFIX => [],
      "[" => [],
      "{" => [],
    },
    :statement => {
      "(" => [:tripleOrBareGraph],
      :ANON => [:tripleOrBareGraph],
      :BASE => [:directive],
      :BLANK_NODE_LABEL => [:tripleOrBareGraph],
      :GRAPH => [:graphword],
      :IRIREF => [:tripleOrBareGraph],
      :PNAME_LN => [:tripleOrBareGraph],
      :PNAME_NS => [:tripleOrBareGraph],
      :PREFIX => [:directive],
      "[" => [:tripleOrBareGraph],
      "{" => [:wrappedDefault],
    },
    :subject => {
      "(" => [:collection],
      :ANON => [:BlankNode],
      :BLANK_NODE_LABEL => [:BlankNode],
      :IRIREF => [:iri],
      :PNAME_LN => [:iri],
      :PNAME_NS => [:iri],
    },
    :trigDoc => {
      "(" => [:_trigDoc_1],
      :ANON => [:_trigDoc_1],
      :BASE => [:_trigDoc_1],
      :BLANK_NODE_LABEL => [:_trigDoc_1],
      :GRAPH => [:_trigDoc_1],
      :IRIREF => [:_trigDoc_1],
      :PNAME_LN => [:_trigDoc_1],
      :PNAME_NS => [:_trigDoc_1],
      :PREFIX => [:_trigDoc_1],
      "[" => [:_trigDoc_1],
      "{" => [:_trigDoc_1],
    },
    :_trigDoc_1 => {
      "(" => [:statement, :trigDoc],
      :ANON => [:statement, :trigDoc],
      :BASE => [:statement, :trigDoc],
      :BLANK_NODE_LABEL => [:statement, :trigDoc],
      :GRAPH => [:statement, :trigDoc],
      :IRIREF => [:statement, :trigDoc],
      :PNAME_LN => [:statement, :trigDoc],
      :PNAME_NS => [:statement, :trigDoc],
      :PREFIX => [:statement, :trigDoc],
      "[" => [:statement, :trigDoc],
      "{" => [:statement, :trigDoc],
    },
    :tripleOrBareGraph => {
      "(" => [:_tripleOrBareGraph_2],
      :ANON => [:_tripleOrBareGraph_1],
      :BLANK_NODE_LABEL => [:_tripleOrBareGraph_1],
      :IRIREF => [:_tripleOrBareGraph_1],
      :PNAME_LN => [:_tripleOrBareGraph_1],
      :PNAME_NS => [:_tripleOrBareGraph_1],
      "[" => [:_tripleOrBareGraph_2],
    },
    :_tripleOrBareGraph_1 => {
      :ANON => [:graphName, :_tripleOrBareGraph_3],
      :BLANK_NODE_LABEL => [:graphName, :_tripleOrBareGraph_3],
      :IRIREF => [:graphName, :_tripleOrBareGraph_3],
      :PNAME_LN => [:graphName, :_tripleOrBareGraph_3],
      :PNAME_NS => [:graphName, :_tripleOrBareGraph_3],
    },
    :_tripleOrBareGraph_2 => {
      "(" => [:graphName1, :_tripleOrBareGraph_5],
      "[" => [:graphName1, :_tripleOrBareGraph_5],
    },
    :_tripleOrBareGraph_3 => {
      :IRIREF => [:_tripleOrBareGraph_4],
      :PNAME_LN => [:_tripleOrBareGraph_4],
      :PNAME_NS => [:_tripleOrBareGraph_4],
      "a" => [:_tripleOrBareGraph_4],
      "{" => [:wrappedDefault],
    },
    :_tripleOrBareGraph_4 => {
      :IRIREF => [:PropertyListNotEmpty, "."],
      :PNAME_LN => [:PropertyListNotEmpty, "."],
      :PNAME_NS => [:PropertyListNotEmpty, "."],
      "a" => [:PropertyListNotEmpty, "."],
    },
    :_tripleOrBareGraph_5 => {
      "." => [:_tripleOrBareGraph_6],
      :IRIREF => [:_tripleOrBareGraph_6],
      :PNAME_LN => [:_tripleOrBareGraph_6],
      :PNAME_NS => [:_tripleOrBareGraph_6],
      "a" => [:_tripleOrBareGraph_6],
      "{" => [:wrappedDefault],
    },
    :_tripleOrBareGraph_6 => {
      "." => [:_tripleOrBareGraph_7, "."],
      :IRIREF => [:_tripleOrBareGraph_7, "."],
      :PNAME_LN => [:_tripleOrBareGraph_7, "."],
      :PNAME_NS => [:_tripleOrBareGraph_7, "."],
      "a" => [:_tripleOrBareGraph_7, "."],
    },
    :_tripleOrBareGraph_7 => {
      "." => [],
      :IRIREF => [:PropertyListNotEmpty],
      :PNAME_LN => [:PropertyListNotEmpty],
      :PNAME_NS => [:PropertyListNotEmpty],
      "a" => [:PropertyListNotEmpty],
    },
    :wrappedDefault => {
      "{" => ["{", :_wrappedDefault_1, "}"],
    },
    :_wrappedDefault_1 => {
      "(" => [:TriplesTemplate],
      :ANON => [:TriplesTemplate],
      :BLANK_NODE_LABEL => [:TriplesTemplate],
      :IRIREF => [:TriplesTemplate],
      :PNAME_LN => [:TriplesTemplate],
      :PNAME_NS => [:TriplesTemplate],
      "[" => [:TriplesTemplate],
      "}" => [],
    },
  }.freeze
  TERMINALS = [
    "(",
    ")",
    ",",
    ".",
    ";",
    :ANON,
    :BASE,
    :BLANK_NODE_LABEL,
    :DECIMAL,
    :DOUBLE,
    :GRAPH,
    :INTEGER,
    :IRIREF,
    :LANGTAG,
    :PNAME_LN,
    :PNAME_NS,
    :PREFIX,
    :STRING_LITERAL_LONG_QUOTE,
    :STRING_LITERAL_LONG_SINGLE_QUOTE,
    :STRING_LITERAL_QUOTE,
    :STRING_LITERAL_SINGLE_QUOTE,
    "[",
    "]",
    "^^",
    "a",
    "false",
    "true",
    "{",
    "}"
  ].freeze
  FIRST = {
    :BlankNode => [
      :BLANK_NODE_LABEL,
      :ANON],
    :BlankNodePropertyList => [
      "["],
    :_BlankNodePropertyList_1 => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_BlankNodePropertyList_2 => [
      "]"],
    :BooleanLiteral => [
      "true",
      "false"],
    :NumericLiteral => [
      :INTEGER,
      :DECIMAL,
      :DOUBLE],
    :ObjectList => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_ObjectList_1 => [
      :_eps,
      ","],
    :_ObjectList_2 => [
      ","],
    :_ObjectList_3 => [
      ","],
    :_ObjectList_4 => [
      :_eps,
      ","],
    :_ObjectList_5 => [
      :_eps,
      ","],
    :_ObjectList_6 => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :PrefixedName => [
      :PNAME_LN,
      :PNAME_NS],
    :PropertyList => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :PropertyListNotEmpty => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_PropertyListNotEmpty_1 => [
      :_eps,
      ";"],
    :_PropertyListNotEmpty_2 => [
      ";"],
    :_PropertyListNotEmpty_3 => [
      ";"],
    :_PropertyListNotEmpty_4 => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_PropertyListNotEmpty_5 => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_PropertyListNotEmpty_6 => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_PropertyListNotEmpty_7 => [
      :_eps,
      ";"],
    :_PropertyListNotEmpty_8 => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_PropertyListNotEmpty_9 => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :RDFLiteral => [
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_1 => [
      :_eps,
      :LANGTAG,
      "^^"],
    :_RDFLiteral_2 => [
      :LANGTAG,
      "^^"],
    :_RDFLiteral_3 => [
      "^^"],
    :_RDFLiteral_4 => [
      :LANGTAG,
      :_eps,
      "^^"],
    :String => [
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :TriplesSameSubject => [
      "[",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_TriplesSameSubject_1 => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_TriplesSameSubject_2 => [
      "["],
    :_TriplesSameSubject_3 => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_TriplesSameSubject_4 => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :TriplesTemplate => [
      "[",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_TriplesTemplate_1 => [
      :_eps,
      "."],
    :_TriplesTemplate_2 => [
      "."],
    :_TriplesTemplate_3 => [
      :_eps,
      "[",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_TriplesTemplate_4 => [
      ".",
      :_eps],
    :_TriplesTemplate_5 => [
      :_eps,
      "[",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :Verb => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :base => [
      :BASE],
    :_base_1 => [
      ".",
      :_eps],
    :_base_2 => [
      :IRIREF],
    :_base_3 => [
      ".",
      :_eps],
    :collection => [
      "("],
    :_collection_1 => [
      :_eps,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_2 => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_3 => [
      ")",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_4 => [
      :_eps,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_5 => [
      ")"],
    :directive => [
      :PREFIX,
      :BASE],
    :_empty => [
      :_eps],
    :graphName => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      :PNAME_LN,
      :PNAME_NS],
    :graphName1 => [
      "(",
      "["],
    :graphword => [
      :GRAPH],
    :_graphword_1 => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      :PNAME_LN,
      :PNAME_NS],
    :_graphword_2 => [
      "{"],
    :iri => [
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :literal => [
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :object => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :predicate => [
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :prefixID => [
      :PREFIX],
    :_prefixID_1 => [
      ".",
      :_eps],
    :_prefixID_2 => [
      :PNAME_NS],
    :_prefixID_3 => [
      :IRIREF],
    :_prefixID_4 => [
      ".",
      :_eps],
    :statement => [
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :subject => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :trigDoc => [
      :_eps,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_trigDoc_1 => [
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_trigDoc_2 => [
      :_eps,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :tripleOrBareGraph => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_1 => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_10 => [
      "{",
      ".",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_11 => [
      "."],
    :_tripleOrBareGraph_2 => [
      "(",
      "["],
    :_tripleOrBareGraph_3 => [
      "{",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_4 => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_5 => [
      "{",
      ".",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_6 => [
      ".",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_7 => [
      :_eps,
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_8 => [
      "{",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_9 => [
      "."],
    :wrappedDefault => [
      "{"],
    :_wrappedDefault_1 => [
      :_eps,
      "[",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_wrappedDefault_2 => [
      "}",
      "[",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      :PNAME_LN,
      :PNAME_NS],
    :_wrappedDefault_3 => [
      "}"],
  }.freeze
  FOLLOW = {
    :BlankNode => [
      "{",
      "a",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :BlankNodePropertyList => [
      "{",
      ".",
      "}",
      "a",
      ")",
      ",",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_BlankNodePropertyList_1 => [
      "{",
      ".",
      "}",
      "a",
      ")",
      ",",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_BlankNodePropertyList_2 => [
      "{",
      ".",
      "}",
      "a",
      ")",
      ",",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :BooleanLiteral => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :NumericLiteral => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :ObjectList => [
      ".",
      "]",
      ";",
      "}"],
    :_ObjectList_1 => [
      ".",
      "]",
      ";",
      "}"],
    :_ObjectList_2 => [
      ",",
      ".",
      "]",
      ";",
      "}"],
    :_ObjectList_3 => [
      ".",
      "]",
      ";",
      "}"],
    :_ObjectList_4 => [
      ".",
      "]",
      ";",
      "}"],
    :_ObjectList_5 => [
      ".",
      "]",
      ";",
      "}"],
    :_ObjectList_6 => [
      ",",
      ".",
      "]",
      ";",
      "}"],
    :PrefixedName => [
      "{",
      "a",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ")",
      ",",
      ".",
      "]",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      ";",
      "}",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :PropertyList => [
      ".",
      "}"],
    :PropertyListNotEmpty => [
      ".",
      "]",
      "}"],
    :_PropertyListNotEmpty_1 => [
      ".",
      "]",
      "}"],
    :_PropertyListNotEmpty_2 => [
      ".",
      ";",
      "]",
      "}"],
    :_PropertyListNotEmpty_3 => [
      ".",
      "]",
      "}"],
    :_PropertyListNotEmpty_4 => [
      ".",
      ";",
      "]",
      "}"],
    :_PropertyListNotEmpty_5 => [
      ".",
      ";",
      "]",
      "}"],
    :_PropertyListNotEmpty_6 => [
      ".",
      "]",
      "}"],
    :_PropertyListNotEmpty_7 => [
      ".",
      "]",
      "}"],
    :_PropertyListNotEmpty_8 => [
      ".",
      ";",
      "]",
      "}"],
    :_PropertyListNotEmpty_9 => [
      ".",
      ";",
      "]",
      "}"],
    :RDFLiteral => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_1 => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_2 => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_3 => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_RDFLiteral_4 => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :String => [
      :LANGTAG,
      "^^",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :TriplesSameSubject => [
      ".",
      "}"],
    :_TriplesSameSubject_1 => [
      ".",
      "}"],
    :_TriplesSameSubject_2 => [
      ".",
      "}"],
    :_TriplesSameSubject_3 => [
      ".",
      "}"],
    :_TriplesSameSubject_4 => [
      ".",
      "}"],
    :TriplesTemplate => [
      "}"],
    :_TriplesTemplate_1 => [
      "}"],
    :_TriplesTemplate_2 => [
      "}"],
    :_TriplesTemplate_3 => [
      "}"],
    :_TriplesTemplate_4 => [
      "}"],
    :_TriplesTemplate_5 => [
      "}"],
    :Verb => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :base => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_base_1 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_base_2 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_base_3 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :collection => [
      "{",
      "a",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_1 => [
      ")"],
    :_collection_2 => [
      ")"],
    :_collection_3 => [
      "{",
      "a",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :_collection_4 => [
      ")"],
    :_collection_5 => [
      "{",
      "a",
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :directive => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :graphName => [
      "{",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :graphName1 => [
      "{",
      ".",
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :graphword => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_graphword_1 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_graphword_2 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :iri => [
      "{",
      "a",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ")",
      ",",
      ".",
      "]",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      ";",
      "}",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :literal => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :object => [
      ")",
      ",",
      ".",
      "]",
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      ";",
      "}",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE],
    :predicate => [
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS,
      :INTEGER,
      :DECIMAL,
      :DOUBLE,
      "true",
      "false",
      ")",
      ",",
      ".",
      "]",
      :STRING_LITERAL_QUOTE,
      :STRING_LITERAL_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_SINGLE_QUOTE,
      :STRING_LITERAL_LONG_QUOTE,
      ";",
      "}"],
    :prefixID => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_prefixID_1 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_prefixID_2 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_prefixID_3 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_prefixID_4 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :statement => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :subject => [
      "a",
      :IRIREF,
      :PNAME_LN,
      :PNAME_NS],
    :trigDoc => [
      :_eof],
    :_trigDoc_1 => [
      :_eof],
    :_trigDoc_2 => [
      :_eof],
    :tripleOrBareGraph => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_1 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_10 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_11 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_2 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_3 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_4 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_5 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_6 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_7 => [
      "."],
    :_tripleOrBareGraph_8 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_tripleOrBareGraph_9 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :wrappedDefault => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_wrappedDefault_1 => [
      "}"],
    :_wrappedDefault_2 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
    :_wrappedDefault_3 => [
      :_eof,
      :GRAPH,
      "{",
      :PREFIX,
      :BASE,
      :IRIREF,
      :BLANK_NODE_LABEL,
      :ANON,
      "(",
      "[",
      :PNAME_LN,
      :PNAME_NS],
  }.freeze
end

